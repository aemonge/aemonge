#!/usr/bin/env python3
import math
import argparse
from typing import List, Tuple

def main(input_size) -> List[Tuple[int, int]]:
    """
        Get the factor of a number. Very useful to set the shapes of a given tensor

        Parameter:
        ----------
            input_size : int
                The number to get the factor from.

        Returns:
        --------
            List[Tuple[int, int]]
                A list of pairs that are factors of the given number

    """
    factors = set()
    for i in range(2, int(math.sqrt(input_size)) + 1):
        if input_size % i == 0:
            factors.add(i)
            factors.add(input_size // i)
    shapes = []
    sorted_factors = sorted(factors, reverse=True)
    sorted_factors = sorted_factors[:len(sorted_factors)//2 + 1]
    for h in sorted_factors:
        if input_size % h == 0:
            w = input_size // h
            shapes.append((h, w))
    return shapes

if __name__ == '__main__':
    desc = 'Get the factor of a number. Very useful to set the shapes of a given tensor'
    parser = argparse.ArgumentParser(description=desc)
    parser.add_argument('factor_me', type=int, help='the number to get the factor from')
    args = parser.parse_args()

    factors = main(args.factor_me)
    print(factors)
