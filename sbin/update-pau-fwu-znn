#!/bin/zsh

set -e

show_help() {
    echo "Usage: $0 [OPTION]"
    echo "Run system updates for various package managers."
    echo
    echo "Options:"
    echo "  -h, --help, help    Show this help message and exit"
    echo "  pacman              Update using pacman"
    echo "  aura                Update using aura"
    echo "  snap                Update using snap"
    echo "  hardware            Update hardware firmware"
    echo "  clam                Update ClamAV database"
    echo "  cargo               Update cargo packages"
    echo "  npm                 Update npm packages"
    echo "  zinit               Update zinit plugins"
    echo "  neovim              Update Neovim plugins"
    echo "  completions         Generate Zsh completions and save to ~/.zfunc"
}

update_pacman() {
    echo "sudo pacman -Syu --noconfirm"
    sudo pacman -Syu --noconfirm
}

update_aura() {
    echo "aura -Ayu --noconfirm"
    sudo aura -Ayu --noconfirm
}

update_snap() {
    if [ command -v "snap" &> /dev/null ]; then
        echo "sudo snap refresh"
        sudo systemctl start snapd.apparmor.service snapd.service
        sudo snap refresh
        sudo systemctl stop snapd.apparmor.service snapd.service snapd.socket
    else
        echo "no snap package manager found"
    fi
}

update_hardware() {
    echo "fwupdmgr update -y"
    sudo fwupdmgr refresh || true
    sudo fwupdmgr get-updates || true
    sudo fwupdmgr update -y
}

update_clam() {
    echo "freshclam"
    sudo freshclam
}

update_cargo() {
    echo "cargo install-update -a"
    cargo install-update -a
}

update_npm() {
    echo "npm update -g"
    npm update -g
}

update_zinit() {
    echo "zinit self-update && zinit update"
    zsh -ic "zinit self-update"
    zsh -ic "zinit update"
}

update_neovim() {
    LOGFILE="/tmp/neovim_update.log"
    echo "neovim update: nvim --headless +'Lazy update | Lazy load coc.nvim | CocUpdateSync | TSUpdateSync' +qall" | tee -a $LOGFILE

    nvim --headless +'Lazy update' +qall 2>&1 | tee -a "$LOGFILE"
    nvim --headless +'Lazy load coc.nvim | CocUpdateSync' +qall 2>&1 | tee -a "$LOGFILE"
    nvim --headless +'TSUpdateSync' +qall 2>&1 | tee -a "$LOGFILE"
    rm "$LOGFILE"
}

generate_completions() {
    local completion_script=$(cat <<'EOF'
#compdef update_pau_fwu_znn

_arguments \
  '(-h --help help)'{-h,--help,help}'[Show help message]' \
  'pacman[Update using pacman]' \
  'aura[Update using aura]' \
  'snap[Update using snap]' \
  'hardware[Update hardware firmware]' \
  'clam[Update ClamAV database]' \
  'cargo[Update cargo packages]' \
  'npm[Update npm packages]' \
  'zinit[Update zinit plugins]' \
  'neovim[Update Neovim plugins]' \
  'completions[Generate Zsh completions and save to ~/.zfunc]'
EOF
    )

    mkdir -p ~/.zfunc
    echo "$completion_script" > ~/.zfunc/_update_pau_fwu_znn
    echo "Zsh completions have been saved to ~/.zfunc/_update_pau_fwu_znn. Please ensure ~/.zfunc is in your fpath and restart your shell or run 'autoload -U compinit && compinit' to enable them."
}

pcloud_push() {
    echo "pcloud push"
    pcloud-push.sh
}

main() {
    if [ $# -eq 0 ]; then
        update_pacman
        update_aura
        update_snap
        update_hardware
        update_clam
        update_cargo
        update_npm
        update_zinit
        update_neovim
        pcloud_push
    else
        for arg in "$@"; do
            case $arg in
                -h|--help|help) show_help; exit 0 ;;
                pacman) update_pacman ;;
                aura) update_aura ;;
                snap) update_snap ;;
                hardware) update_hardware ;;
                clam) update_clam ;;
                cargo) update_cargo ;;
                npm) update_npm ;;
                zinit) update_zinit ;;
                neovim) update_neovim ;;
                pcloud) pcloud_push ;;
                completions) generate_completions; exit 0 ;;
                *) echo "Unknown update: $arg"; show_help; exit 1 ;;
            esac
        done
    fi
}

main "$@"
